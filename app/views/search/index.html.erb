<%
# Redmine Xapian is a Redmine plugin to allow attachments searches by content.
#
# Xabier Elkano, Karel Pičman <karel.picman@kontron.com>
#
# This file is part of Redmine Xapian plugin.
#
# Redmine Xapian plugin is free software: you can redistribute it and/or modify it under the terms of the GNU General
# Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# Redmine Xapian plugin is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with Redmine Xapian plugin. If not, see
# <https://www.gnu.org/licenses/>.
%>

<h2><%= l(:label_search) %></h2>

<%= form_tag({}, :method => :get, :id => 'search-form') do %>
<div class="box">
<%= label_tag "search-input", l(:description_search), :class => "hidden-for-sighted" %>
  <p><%= text_field_tag 'q', @question, :size => 60, :id => 'search-input',
                        :data => {
                          :auto_complete => true
                        }.merge(list_autofill_data_attributes) %>
<%= project_select_tag %>
<%= hidden_field_tag 'all_words', '', :id => nil %>
<label><%= check_box_tag 'all_words', 1, @all_words %> <%= l(:label_all_words) %></label>
<%= hidden_field_tag 'titles_only', '', :id => nil %>
<label><%= check_box_tag 'titles_only', 1, @titles_only %> <%= l(:label_search_titles_only) %></label>
</p>

<fieldset class="box">
<legend><%= toggle_checkboxes_link('p#search-types input') %></legend>
<p id="search-types">
  <% @object_types.each do |t| %>
    <label>
      <%= check_box_tag t, 1, @scope.include?(t) %>
      <%# Plugin change do %>
        <%#= link_to type_label(t), "#" %>
        <%= link_to type_label(t == 'attachments' ? 'file-attachment' : t), '#' %>
      <%# end %>
    </label>
  <% end %>
</p>
</fieldset>

  <% # Plugin change do %>
<fieldset class="collapsible">
  <legend onclick="toggleFieldset(this);" class="icon icon-collapsed">
    <%= sprite_icon("angle-right", rtl: true) %>
    <%= l(:label_options) %>
  </legend>
  <div id="options-content" style="display:none;">
    <p><label><%= check_box_tag 'open_issues', 1, @open_issues %> <%= l(:label_search_open_issues_only) %></label></p>
<!--    <p>-->
<!--      <label><%#= radio_button_tag 'attachments', '0', @search_attachments == '0' %> <%#= l(:label_search_attachments_no) %></label>-->
<!--      <label><%#= radio_button_tag 'attachments', '1', @search_attachments == '1' %> <%#= l(:label_search_attachments_yes) %></label>-->
<!--      <label><%#= radio_button_tag 'attachments', 'only', @search_attachments == 'only' %> <%#= l(:label_search_attachments_only) %></label>-->
<!--    </p>-->
    <%= call_hook(:view_search_index_options_content_bottom) %>
  </div>
</fieldset>
<%= hidden_field_tag 'options', '', :id => 'show-options' %>
<% # Plugin change end %>
</div>
<p><%= submit_tag l(:label_search) %></p>
<% end %>

<% if @results %>
  <div id="search-results-counts">
    <%= render_results_by_type(@result_count_by_type) unless @scope.size == 1 %>
  </div>
  <h3><%= l(:label_result_plural) %> (<%= @result_count %>)</h3>
  <% if @result_count_by_type['issues'].to_i > 0 && @search_attachments == '0' %>
    <p class="buttons">
      <%= link_to sprite_icon('list', l(:button_apply_issues_filter)), issues_filter_path(@question, projects_scope: params[:scope], all_words: @all_words, titles_only: @titles_only, open_issues: @open_issues), :class => 'icon icon-list' %>
    </p>
  <% end %>
  <dl id="search-results">
    <% @results.each do |e| %>
      <dt class="<%= e.event_type %> icon icon-<%= e.event_type %>">
        <%= sprite_icon(e.event_type) %>
        <% # Plugin change start %>
        <%#= content_tag('span', e.project, :class => 'project') unless @project == e.project %>
        <%= content_tag('span', link_to(e.project, project_path(e.project)), class: 'project') unless @project == e.project  %>
        <% if e.event_type == 'attachment' %>
            <%= link_to_container e %> /
        <% else %>
            <%= call_hook :view_search_index_container, object: e %>
        <% end %>
        <%= content_tag('span', h(e.format_identifier), class: 'identifier') if defined?(e.format_identifier) && !e.format_identifier.empty? %>
        <% # end %>
        <%= link_to(highlight_tokens(e.event_title.truncate(255), @tokens), e.event_url) %>
      </dt>
      <dd><span class="description"><%= highlight_tokens(e.event_description, @tokens) %></span>
      <span class="author"><%= format_time(e.event_datetime) %></span></dd>
    <% end %>
  </dl>
<% end %>

<% if @result_pages %>
  <span class="pagination"><%= pagination_links_full @result_pages, @result_count, :per_page_links => false %></span>
<% end %>

<% html_title(l(:label_search)) %>

<%= javascript_tag do %>
  $("#search-types a").click(function(e){
    e.preventDefault();
    $("#search-types input[type=checkbox]").prop('checked', false);
    $(this).siblings("input[type=checkbox]").prop('checked', true);
    if ($("#search-input").val() != "") {
      $("#search-form").submit();
    }
  });

  $("#search-form").submit(function(){
    $("#show-options").val($("#options-content").is(":visible") ? '1' : '0');
  });

  <% if params[:options] == '1' %>
    toggleFieldset($("#options-content"));
  <% end %>
<% end %>
